[{"authors":null,"categories":null,"content":"  Download my resum√©.\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"http://isdrfall21.classes.spaseslab.com/author/matt-williamosn/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/matt-williamosn/","section":"authors","summary":"Download my resum√©.","tags":null,"title":"Matt Williamosn","type":"authors"},{"authors":null,"categories":null,"content":"Âê≥ÊÅ©ÈÅî is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"da99cb196019cc5857b9b3e950397ca9","permalink":"http://isdrfall21.classes.spaseslab.com/author/%E5%90%B3%E6%81%A9%E9%81%94/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E5%90%B3%E6%81%A9%E9%81%94/","section":"authors","summary":"Âê≥ÊÅ©ÈÅî is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.","tags":null,"title":"Âê≥ÊÅ©ÈÅî","type":"authors"},{"authors":null,"categories":null,"content":"   Table of Contents  What you will learn Program overview Courses in this program Meet your instructor FAQs    What you will learn  Fundamental Python programming skills Statistical concepts and how to apply them in practice Gain experience with the Scikit, including data visualization with Plotly and data wrangling with Pandas  Program overview The demand for skilled data science practitioners is rapidly growing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi.\nCourses in this program  Python basics Build a foundation in Python.   Visualization Learn how to visualize data with Plotly.   Statistics Introduction to statistics for data science.   Meet your instructor Matt Williamosn FAQs Are there prerequisites? There are no prerequisites for the first course.\n How often do the courses run? Continuously, at your own pace.\n  Begin the course   ","date":1611446400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1611446400,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"http://isdrfall21.classes.spaseslab.com/courses/example/","publishdate":"2021-01-24T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"An example of using Wowchemy's Book layout for publishing online courses.","tags":null,"title":"üìä Learn Data Science","type":"book"},{"authors":null,"categories":null,"content":"Here are some helpful resources for installing and learning R and git; data visualization; links for interesting data; and past projects. If you find something cool, let me know and we\u0026rsquo;ll add it here!\n","date":1627776000,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1627776000,"objectID":"e5656835a9d5f0c69a44e56dc2b58101","permalink":"http://isdrfall21.classes.spaseslab.com/resource/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/resource/","section":"resource","summary":"Here are some helpful resources for installing and learning R and git; data visualization; links for interesting data; and past projects. If you find something cool, let me know and we\u0026rsquo;ll add it here!","tags":null,"title":"Helpful resources","type":"docs"},{"authors":null,"categories":null,"content":"Each class session has a set of required readings that you should complete prior to the \u0026lsquo;computer lab\u0026rsquo; portion of the class.\nThe lecture slides are special HTML files made with the R package xaringan (R can do so much!). On each class session page you\u0026rsquo;ll buttons for opening the presentation in a new tab or for downloading a PDF of the slides in case you want to print them or store them on your computer:\n View all slides in new window  Download PDF of all slides\nThe slides are also embedded on each page. You can click in the slides and navigate through them with ‚Üê and ‚Üí. If you type ? (or shift + /) while viewing the slides you can see a list of slide-specific commands (like f for fullscreen or p for presenter mode if you want to see my notes).\n","date":1632700800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1632700800,"objectID":"8899c927408853efa5f455eaa551e047","permalink":"http://isdrfall21.classes.spaseslab.com/content/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/content/","section":"content","summary":"Each class session has a set of required readings that you should complete prior to the \u0026lsquo;computer lab\u0026rsquo; portion of the class.\nThe lecture slides are special HTML files made with the R package xaringan (R can do so much!","tags":null,"title":"Readings and lectures","type":"docs"},{"authors":null,"categories":null,"content":"This section contains a series of RMarkdown documents containing annotated code and explanations for the logic behind different workflows and decisions.\nThis code is designed to be functional and (hopefully) transparent. It may not always be the fastest, but it should get the job done. The idea is to give you enough of a foundation and intuition to be able to complete the assignments with minimal help from me.\n","date":1631750400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1631750400,"objectID":"e9b55dc35cd7c0402d035e510f00bf75","permalink":"http://isdrfall21.classes.spaseslab.com/example/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/example/","section":"example","summary":"This section contains a series of RMarkdown documents containing annotated code and explanations for the logic behind different workflows and decisions.\nThis code is designed to be functional and (hopefully) transparent.","tags":null,"title":"Code examples","type":"docs"},{"authors":null,"categories":null,"content":"You will get the most of out this class if you:\n Engage with the readings and lecture materials Regularly use R  Hopefully these assignements help reinforce those strategies.\nWeekly assignments Each week during our \u0026lsquo;lab\u0026rsquo; section (usually on Thursdays), you\u0026rsquo;ll have an assignment due. These assignements involve a mix of coding, analyis, and reflection. These exercises will have 1‚Äì5 short tasks that are directly related to the topic for the day along with 1-2 reflection questions. The material we cover in class along with the guided examples should be all you need to complete the assignments, but feel free to ask your classmates, the Intenets, or me if you get stuck. You may (and should!) work together on the exercises, but you must turn in your own answers.\nI will grade these memos using a check system:\n ‚úî+: (17.25 points (115%) in gradebook) Exercises are 100% completed. Every task was attempted and answered, and most answers are correct. Knitted document is clean and easy to follow. Work is exceptional. I will not assign these often. ‚úî: (15 points (100%) in gradebook) Exercises are 70‚Äì99% complete and most answers are correct. This is the expected level of performance. ‚úî‚àí: (7.5 points (50%) in gradebook) Exercises are less than 70% complete and/or most answers are incorrect. This indicates that you need to improve next time. I will hopefully not assign these often.  Notice that is essentially a pass/fail or completion-based system. I\u0026rsquo;m not grading your coding ability, I\u0026rsquo;m not counting the exact number of words you\u0026rsquo;re writing, and I\u0026rsquo;m not looking for encyclopedic citations of every single reading. I\u0026rsquo;m looking for a good faith effort and thoughtful engagement, that\u0026rsquo;s all. Do good work and you\u0026rsquo;ll get a ‚úì.\nYou will turn these exercises in using GitHub Classroom. .\nMini projects To give you practice with the data and design principles you\u0026rsquo;ll learn in this class, you will complete two mini projects. I will provide you with real-world data and pose one or more questions‚Äîyou will make a pretty picture to answer those questions.\nThe mini projects will be graded using a check system:\n ‚úî+: (57.5 points (‚âà115%) in gradebook) Project is phenomenally well-designed and uses advanced R techniques. The project uncovers an important story that is not readily apparent from just looking at the raw data. I will not assign these often. ‚úî: (50 points (100%) in gradebook) Project is fine, follows most design principles, answers a question from the data, and uses R correctly. This is the expected level of performance. ‚úî‚àí: (25 points (50%) in gradebook) Project is missing large components, is poorly designed, does not answer a relevant question, and/or uses R incorrectly. This indicates that you need to improve next time. I will hopefully not assign these often.  Because these mini projects give you practice for the final project, I will provide you with substantial feedback on your design and code.\nFinal project At the end of the course, you will demonstrate your spatial analysis and visualization skills by completing a final project.\nComplete details for the final project (including past examples of excellent projects) are here.\nThere is no final exam. This project is your final exam.\nThe project will not be graded using a check system. Instead I will use a rubric to grade four elements of your project:\n Technical skills (is the workflow robust? Scaleable?) Quality of visualization (is a map necessary? how do we deal with uncertainty?) Story (Why do we care about this? Why does space matter?)  If you\u0026rsquo;ve engaged with the course content and completed the exercises and mini projects throughout the course, you should do just fine with the final project.\n","date":1630022400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1630022400,"objectID":"e18c399687bc0897ffd6503c7a1bbb8e","permalink":"http://isdrfall21.classes.spaseslab.com/assignment/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/assignment/","section":"assignment","summary":"You will get the most of out this class if you:\n Engage with the readings and lecture materials Regularly use R  Hopefully these assignements help reinforce those strategies.","tags":null,"title":"Assignment overview","type":"docs"},{"authors":null,"categories":null,"content":"Modified from Andrew Heiss\nYou will do all of your work in this class with the open source (and free!) programming language R. You will use RStudio as the main program to access R. Here are some instructions for how to get started.\nRStudio.cloud R is free, but it can sometimes be a pain to install and configure. To make life easier, we are going to use an RStudio server, a web-interface to RStudio, that is set up on the Boise State Research Computing cluster. This means you won\u0026rsquo;t have to install anything on your computer to get started with R! We will have a shared folder with the data for exercises and a Github workspace to allow easy access to code and templates.\nRStudio on your computer At some point you are likely to need a local version of R to run the analyses for your graduate work. Here\u0026rsquo;s how you install all these things\nInstall R First you need to install R itself (the engine).\n  Go to the CRAN (Collective R Archive Network)1 website: https://cran.r-project.org/\n  Click on \u0026ldquo;Download R for XXX\u0026rdquo;, where XXX is either Mac or Windows:\n  If you use macOS, scroll down to the first .pkg file in the list of files (in this picture, it\u0026rsquo;s R-4.0.0.pkg; as of right now, the current version is also 4.0.0) and download it.\n  If you use Windows, click \u0026ldquo;base\u0026rdquo; (or click on the bolded \u0026ldquo;install R for the first time\u0026rdquo; link) and download it.\n    Double click on the downloaded file (check your Downloads folder). Click yes through all the prompts to install like any other program.\n  If you use macOS, download and install XQuartz. You do not need to do this on Windows.\n  Install RStudio Next, you need to install RStudio, the nicer graphical user interface (GUI) for R (the dashboard). Once R and RStudio are both installed, you can ignore R and only use RStudio. RStudio will use R automatically and you won\u0026rsquo;t ever have to interact with it directly.\n  Go to the free download location on RStudio\u0026rsquo;s website: https://www.rstudio.com/products/rstudio/download/#download\n  The website should automatically detect your operating system (macOS or Windows) and show a big download button for it:\nIf not, scroll down a little to the large table and choose the version of RStudio that matches your operating system.\n  Double click on the downloaded file (again, check your Downloads folder). Click yes through all the prompts to install like any other program.\n  Double click on RStudio to run it (check your applications folder or start menu).\nInstall tidyverse R packages are easy to install with RStudio. Select the packages panel, click on \u0026ldquo;Install,\u0026rdquo; type the name of the package you want to install, and press enter.\nThis can sometimes be tedious when you\u0026rsquo;re installing lots of packages, though. The tidyverse, for instance, consists of dozens of packages (including ggplot2) that all work together. Rather than install each individually, you can install a single magical package and get them all at the same time.\nGo to the packages panel in RStudio, click on \u0026ldquo;Install,\u0026rdquo; type \u0026ldquo;tidyverse\u0026rdquo;, and press enter. You\u0026rsquo;ll see a bunch of output in the RStudio console as all the tidyverse packages are installed.\nNotice also that RStudio will generate a line of code for you and run it: install.packages(\u0026quot;tidyverse\u0026quot;). You can also just paste and run this instead of using the packages panel.\nInstall gdal gdal is the \u0026lsquo;back-end\u0026rsquo; for most of the spatial packages in R. The easiest way to install gdal is to follow the instructions at the sf github page.\nInstall tinytex When you knit to PDF, R uses a special scientific typesetting program named LaTeX (pronounced \u0026ldquo;lay-tek\u0026rdquo; or \u0026ldquo;lah-tex\u0026rdquo;; for goofy nerdy reasons, the x is technically the \u0026ldquo;ch\u0026rdquo; sound in \u0026ldquo;Bach\u0026rdquo;, but most people just say it as \u0026ldquo;k\u0026rdquo;‚Äîsaying \u0026ldquo;layteks\u0026rdquo; is frowned on for whatever reason).\nLaTeX is neat and makes pretty documents, but it\u0026rsquo;s a huge program‚Äîthe macOS version, for instance, is nearly 4 GB! To make life easier, there\u0026rsquo;s an R package named tinytex that installs a minimal LaTeX program and that automatically deals with differences between macOS and Windows.\nHere\u0026rsquo;s how to install tinytex so you can knit to pretty PDFs:\n Use the Packages in panel in RStudio to install tinytex like you did above with tidyverse. Alternatively, run install.packages(\u0026quot;tinytex\u0026quot;) in the console. Run tinytex::install_tinytex() in the console. Wait for a bit while R downloads and installs everything you need. The end! You should now be able to knit to PDF.    It\u0026rsquo;s a goofy name, but CRAN is where most R packages‚Äîand R itself‚Äîlives.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":1627776000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1627776000,"objectID":"c5e6c5f0d0baae071e282245bbba803c","permalink":"http://isdrfall21.classes.spaseslab.com/resource/install/","publishdate":"2021-08-01T00:00:00Z","relpermalink":"/resource/install/","section":"resource","summary":"Modified from Andrew Heiss\nYou will do all of your work in this class with the open source (and free!) programming language R. You will use RStudio as the main program to access R.","tags":null,"title":"Installing R, RStudio, tidyverse, and tinytex","type":"docs"},{"authors":null,"categories":null,"content":"Learning R I highly recommend subscribing to the R Weekly newsletter. This e-mail is sent every Monday and is full of helpful tutorials about how to do stuff with R.\nSearching for help with R on Google can sometimes be tricky because the program name is a single letter. Google is generally smart enough to figure out what you mean when you search for \u0026ldquo;r scatterplot\u0026rdquo;, but if it does struggle, try searching for \u0026ldquo;rstats\u0026rdquo; instead (e.g. \u0026ldquo;rstats scatterplot\u0026rdquo;). Also, since most of your R work in this class will deal with ggplot2, it\u0026rsquo;s often easier to just search for that instead of the letter \u0026ldquo;r\u0026rdquo; (e.g. \u0026ldquo;ggplot scatterplot\u0026rdquo;).\nThese resources are also really really helpful:\nGeneral R Resources  An Introduction to R: The definitive introductory text by Venables, Smith, and the R Core Team. Swirl: A set of free, self-contained tutorials that run from within your RStudio terminal. R for Data Science: A free online book for learning the basics of R and the tidyverse. R and RStudio cheat sheets: A large collection of simple cheat sheets for RStudio, ggplot2, and other R-related things. Stat 545: Dr. Jenny Bryan at RStudio has an entire introductory course in R, visualization, and data analysis online. STA 112FS: Data Science: Dr. Mine √áetinkaya-Rundel at the University of Edinburgh / Duke University has an entire introductory course in R, visualization, and data science online. CSE 631: Principles \u0026amp; Practice of Data Visualization: Yet another introductory course for R and ggplot2 by Dr. Alison Presmanes Hill at RStudio.  R Spatial Resources  sf cheatsheet: An at-a-glance description of the various sf verbs and their application. Geocomputation with R: Online version of the textbook by Lovelace, Nowosad, and Muenchow.  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"fd33fdc527a88c760dba0f467bb3657d","permalink":"http://isdrfall21.classes.spaseslab.com/resource/r/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/resource/r/","section":"resource","summary":"Learning R I highly recommend subscribing to the R Weekly newsletter. This e-mail is sent every Monday and is full of helpful tutorials about how to do stuff with R.","tags":null,"title":"R","type":"docs"},{"authors":null,"categories":null,"content":"So much data, so little time\u0026hellip; Here are some links to help you get started finding data for your geospatial projects\nSpatial Data Repositories   DataBasin: Lots of spatial data related to conservation issues across the US. The AdaptWest portal has tons of spatial data on climate change and its potential impacts.\n  US Protected Areas Database: PAD-US is America‚Äôs official national inventory of U.S. terrestrial and marine protected areas that are dedicated to the preservation of biological diversity and to other natural, recreation and cultural uses, managed for these purposes through legal or other effective means. PAD-US also includes the best available aggregation of federal land and marine areas provided directly by managing agencies, coordinated through the Federal Geographic Data Committee (FGDC) Federal Lands Working Group.\n  USGS Gap Analysis Project: A variety of datasets depicting land cover and species distributions.\n  General Data Repositories   Data is Plural newsletter: Jeremy Singer-Vine sends a weekly newsletter of the most interesting public datasets he\u0026rsquo;s found. You should subscribe to it. He also has an archive of all the datasets he\u0026rsquo;s highlighted.\n  Google Dataset Search: Google indexes thousands of public datasets; search for them here.\n  Kaggle: Kaggle hosts machine learning competitions where people compete to create the fastest, most efficient, most predictive algorithms. A byproduct of these competitions is a host of fascinating datasets that are generally free and open to the public. See, for example, the European Soccer Database, the Salem Witchcraft Dataset or results from an Oreo flavors taste test.\n  360Giving: Dozens of British foundations follow a standard file format for sharing grant data and have made that data available online.\n  US City Open Data Census: More than 100 US cities have committed to sharing dozens of types of data, including data about crime, budgets, campaign finance, lobbying, transit, and zoning. This site from the Sunlight Foundation and Code for America collects this data and rates cities by how well they\u0026rsquo;re doing.\n  Political science and economics datasets## There\u0026rsquo;s a wealth of data available for political science- and economics-related topics: - Fran√ßois Briatte\u0026rsquo;s extensive curated lists: Includes data from/about intergovernmental organizations (IGOs), nongovernmental organizations (NGOs), public opinion surveys, parliaments and legislatures, wars, human rights, elections, and municipalities. - Thomas Leeper\u0026rsquo;s list of political science datasets: Good short list of useful datasets, divided by type of data (country-level data, survey data, social media data, event data, text data, etc.). - Erik Gahner\u0026rsquo;s list of political science datasets: Huge list of useful datasets, divided by topic (governance, elections, policy, political elites, etc.)\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"4c57416e3690fb647bc91955a36b3a16","permalink":"http://isdrfall21.classes.spaseslab.com/resource/data/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/resource/data/","section":"resource","summary":"So much data, so little time\u0026hellip; Here are some links to help you get started finding data for your geospatial projects\nSpatial Data Repositories   DataBasin: Lots of spatial data related to conservation issues across the US.","tags":null,"title":"Data","type":"docs"},{"authors":null,"categories":null,"content":"   Getting in the habit of using version control can be challenging, especially if you are collaborating with others. The challenge gets worse when some of those collaborators are not familiar with the importance of version control. Here are a few links to try and make your (and their) transition a little smoother.\nInstalling Git and making it play nice with R Happy git with R is Jenny Bryan‚Äôs: extremely helpful introduction to git and incorporating it into your R workflow.\n Getting the hang of git Understanding the logic of git: provides a relatively accessible explanation of the various operations in git and links that to commonly used syntax.\nOh Sh@t, Git?!?: A less technical, more irreverant introduction to git workflows and fixing the inevitable challenges of version control. (G-rated version available at Dang it, Git?!?).\n ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"7760634f1c725e42c391efa02beb4e9b","permalink":"http://isdrfall21.classes.spaseslab.com/resource/git.rmarkdown/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/resource/git.rmarkdown/","section":"resource","summary":"Getting in the habit of using version control can be challenging, especially if you are collaborating with others. The challenge gets worse when some of those collaborators are not familiar with the importance of version control.","tags":null,"title":"Git","type":"docs"},{"authors":null,"categories":null,"content":"Build a foundation in Python.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz What is the difference between lists and tuples? Lists\n Lists are mutable - they can be changed Slower than tuples Syntax: a_list = [1, 2.0, 'Hello world']  Tuples\n Tuples are immutable - they can\u0026rsquo;t be changed Tuples are faster than lists Syntax: a_tuple = (1, 2.0, 'Hello world')   Is Python case-sensitive? Yes\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"17a31b92253d299002593b7491eedeea","permalink":"http://isdrfall21.classes.spaseslab.com/courses/example/python/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/courses/example/python/","section":"courses","summary":"Build a foundation in Python.\n","tags":null,"title":"Python basics","type":"book"},{"authors":null,"categories":null,"content":"Learn how to visualize data with Plotly.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz When is a heatmap useful? Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n Write Plotly code to render a bar chart import plotly.express as px data_canada = px.data.gapminder().query(\u0026quot;country == 'Canada'\u0026quot;) fig = px.bar(data_canada, x='year', y='pop') fig.show()  ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"1b341b3479c8c6b1f807553b77e21b7c","permalink":"http://isdrfall21.classes.spaseslab.com/courses/example/visualization/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/courses/example/visualization/","section":"courses","summary":"Learn how to visualize data with Plotly.\n","tags":null,"title":"Visualization","type":"book"},{"authors":null,"categories":null,"content":"Introduction to statistics for data science.\n  1-2 hours per week, for 8 weeks\nLearn The general form of the normal probability density function is:\n$$ f(x) = \\frac{1}{\\sigma \\sqrt{2\\pi} } e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^2} $$\n The parameter $\\mu$ is the mean or expectation of the distribution. $\\sigma$ is its standard deviation. The variance of the distribution is $\\sigma^{2}$.   Quiz What is the parameter $\\mu$? The parameter $\\mu$ is the mean or expectation of the distribution.\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"6f4078728d71b1b791d39f218bf2bdb1","permalink":"http://isdrfall21.classes.spaseslab.com/courses/example/stats/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/courses/example/stats/","section":"courses","summary":"Introduction to statistics for data science.\n","tags":null,"title":"Statistics","type":"book"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"http://isdrfall21.classes.spaseslab.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"Today we‚Äôll begin exploring typical workflows for spatial analysis by working with attribute data. Attributes generally provide additional information about a location that we can use for visualization and analysis. Unlike spatial operations that we‚Äôll explore next week, attribute data do not all require geographic information (but they do need some means of relating to a geography).\nResources These chapters are not ‚Äòprerequisite‚Äô reading for the week, but provide a lot of helpful background for attribute operations in R.\n   The Tidy Data and Relational Data sections from R For Data Science (Wickham and Grolemund 2016) provide a great overview to data cleaning and manipulation functions available in the tidyverse.\n   Doing things with multiple tables has a lot of nice visual examples of for using the _join functions in dplyr.\n   This article (Di Minin et al. 2021) provides a recent recap of a variety of reasons why we may need to combine data from multiple, often disparate, sources.\n  Slides  View all slides in new window  Download PDF of all slides\nBuilding spatial databases based on attributes  Workflows for spatial analysis  Databases and attributes  Common attribute operations  Joining (a)spatial data                   Di Minin, E., R. A. Correia, and T. Toivonen. 2021. Conservation geography. Trends in Ecology \u0026amp; Evolution.\n Wickham, H., and G. Grolemund. 2016. R for data science: Import, tidy, transform, visualize, and model data. \u0026quot; O‚ÄôReilly Media, Inc.\u0026quot;.\n  ","date":1632700800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1632700800,"objectID":"ab54958bbaea5fe381467c40300e6fb1","permalink":"http://isdrfall21.classes.spaseslab.com/content/06-content/","publishdate":"2021-09-27T00:00:00Z","relpermalink":"/content/06-content/","section":"content","summary":"Today we‚Äôll begin exploring typical workflows for spatial analysis by working with attribute data. Attributes generally provide additional information about a location that we can use for visualization and analysis. Unlike spatial operations that we‚Äôll explore next week, attribute data do not all require geographic information (but they do need some means of relating to a geography).","tags":null,"title":"Building spatial databases based on attributes","type":"docs"},{"authors":null,"categories":null,"content":"Today we‚Äôll be exploring one additional data model for spatial information, the network. We‚Äôll explore what constitutes a network, generally. Then, we‚Äôll think a bit about spatial networks. Finally, we‚Äôll start to look at how we might build networks from geospatial data in R.\nResources These chapters are not ‚Äòprerequisite‚Äô reading for the week, but provide a lot of helpful background for raster proccessing in R.\n   Exploring complex networks(Strogatz 2001) is probably one of the most widely read articles describing networks and their role in a broad suite of disciplines. It is also written by a mathemetician which may make some of the language and formulae a little dense for you. That‚Äôs okay! Try to take the high-level points and leave the details for now.\n   This editorial(Poisot et al. 2016) is the opening to a Special Feature in Functional Ecology and provides some context for networks that are specific to ecologists.\n   The Transportation Chapter in (Lovelace et al. 2019) makes the concepts of a network concrete (literally) by using a transportation route example to illustrate the various components of a network analysis in R.\n  Slides  View all slides in new window  Download PDF of all slides\nDefining networks  Common applications of networks  Spatial networks  Building networks in R  Estimating network propoerties                   Lovelace, R., J. Nowosad, and J. Muenchow. 2019. Geocomputation with R. CRC Press.\n Poisot, T., D. B. Stouffer, and S. K√©fi. 2016. Describe, understand and predict: Why do we need networks in ecology? Functional Ecology 30:1878‚Äì1882.\n Strogatz, S. H. 2001. Exploring complex networks. nature 410:268‚Äì276.\n  ","date":1632096000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1632096000,"objectID":"b4d9dbb6ba244e4ebcb0ce95e47cebc7","permalink":"http://isdrfall21.classes.spaseslab.com/content/05-content/","publishdate":"2021-09-20T00:00:00Z","relpermalink":"/content/05-content/","section":"content","summary":"Today we‚Äôll be exploring one additional data model for spatial information, the network. We‚Äôll explore what constitutes a network, generally. Then, we‚Äôll think a bit about spatial networks. Finally, we‚Äôll start to look at how we might build networks from geospatial data in R.","tags":null,"title":"Building networks from spatial data","type":"docs"},{"authors":null,"categories":null,"content":"As we have discussed (constantly), we need to get all of our data aligned before we can do much with spatial analysis or plotting. Workflows for rasters are basically the same as those for vectors (i.e., read the data, compare CRSs, reproject if necessary). The main difference is that rasters introduce a few additional components that we need to match up - the orgin, extent, and resolution. We\u0026rsquo;ll start by looking at how we can verify if/when things are aligned and then move to \u0026lsquo;fixing\u0026rsquo; issues of non-alignment.\nRead the data We use the rast() function from the terra package to read the data into our workspace. Note that the pathnames here are not the same as what you\u0026rsquo;ll use for the lab (because these paths correspond to my computer).\nhm \u0026lt;- rast('/Users/mattwilliamson/Google Drive/My Drive/TEACHING/Intro_Spatial_Data_R/Data/session08/hmi.tif') val \u0026lt;- rast('/Users/mattwilliamson/Google Drive/My Drive/TEACHING/Intro_Spatial_Data_R/Data/session08/idval.tif')  Check the projection Let\u0026rsquo;s take a look at the data. We notice a few obvious differences right off the bat.\nThe plots make it pretty obvious that our extents are different, but what else might be different? Let\u0026rsquo;s use the terra::crs command to check on the different Coordinate Reference Systems.\ncrs(val) == crs(hm)  ## [1] FALSE  crs(hm, proj=TRUE) #use the proj argument to make the output a bit more readable (but deprecated)  ## [1] \u0026quot;+proj=aea +lat_0=37.5 +lon_0=-96 +lat_1=29.5 +lat_2=45.5 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs\u0026quot;  crs(val, proj=TRUE)  ## [1] \u0026quot;+proj=aea +lat_0=23 +lon_0=-96 +lat_1=29.5 +lat_2=45.5 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs\u0026quot;  Reproject and crop the raster As we have discussed, projecting rasters is a bit tricky because we can distort the cells and potentially alter the attribute-geometry-relationship. That said, we often don\u0026rsquo;t want to deal with giant rasters when we are only analyzing a small area. Cropping can help us reduce the size of the rasters, but will require us to reproject one of the rasters to get there. Let\u0026rsquo;s reproject the smaller raster (because it\u0026rsquo;s faster) and then crop the large raster.\nval.proj \u0026lt;- project(val, crs(hm)) hm.crop \u0026lt;- crop(hm, val.proj)  This is looking better, does this mean we have the two rasters aligned?\ncrs(hm.crop) == crs(val.proj)  ## [1] FALSE  Looks like something else might still be off. Let\u0026rsquo;s check the resolution, origin, and extent.\nResampling, aggregating, disaggregating res(hm.crop) == res(val.proj)  ## [1] FALSE FALSE  ext(hm.crop) == ext(val.proj)  ## [1] FALSE  origin(hm.crop) == origin(val.proj)  ## [1] FALSE FALSE  As you can see, the two rasters have different resolutions, extents, and origins. Although, we reprojected the data into the proper projection, this doesn\u0026rsquo;t change these other fundamental properties of the data. We\u0026rsquo;ll use resample() here to fix this because we need to both change the resolution and the location of the cell centers (if we were just changing resolutions, we could use aggregate(), or disaggregate()). We\u0026rsquo;ll resample to the coarser resolution, but we could go the other way if it made sense for the data.\nres(hm.crop)  ## [1] 270 270  res(val.proj)  ## [1] 480 480  hm.rsmple \u0026lt;- resample(hm.crop, val.proj, method='bilinear') crs(hm.rsmple) == crs(val.proj)  ## [1] TRUE  Running functions on multi-layer rasters Great, we\u0026rsquo;ve gotten our data aligned. Let\u0026rsquo;s make a single SpatRast object with 2 layers so that we can run some smoothing.\ncombined.data \u0026lt;- rast(list(hm.rsmple, val.proj)) nlyr(combined.data)  ## [1] 2  plot(combined.data)  One of the nice parts about multilayer rasters is that we can run functions across all pixels in all the layers of a multilayer raster with relative ease. One place we might use this is to scale and center our data before a regression analysis.\ncombined.scale \u0026lt;- scale(combined.data) plot(combined.scale)  Repetitive operations One of the things you\u0026rsquo;ll notice is that you end up doing a lot of copy-and-pasting when you\u0026rsquo;re processing lots of rasters. This can lead to errors that can be really difficult to diagnose. One way around this is to build functions that take \u0026lsquo;anonymous\u0026rsquo; arguments.\n","date":1631750400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1631750400,"objectID":"6f53462a8592f62079eae96e15826cef","permalink":"http://isdrfall21.classes.spaseslab.com/example/04-example/","publishdate":"2021-09-16T00:00:00Z","relpermalink":"/example/04-example/","section":"example","summary":"As we have discussed (constantly), we need to get all of our data aligned before we can do much with spatial analysis or plotting. Workflows for rasters are basically the same as those for vectors (i.","tags":null,"title":"Working with rasters in R","type":"docs"},{"authors":null,"categories":null,"content":"Today we‚Äôll be exploring the raster data model and how it is implemented within the spatial packages in the R computing environment.\nResources These chapters are not ‚Äòprerequisite‚Äô reading for the week, but provide a lot of helpful background for raster proccessing in R.\n   The raster package vignette has a number of helpful examples for different workflows with raster objects in R.\n   The terra package vignette describes the new raster functions available in terra, their relationship to those in the raster package, and the changes in syntax between the two.\n   The Functional Programming and Measuring performance from Advanced R (Wickham 2019) provide an excellent introduction to developing your own functions for repeated operations and ways to optimise code for large problems. Raster data processing often involves repeating (sometimes multiple) steps 100s of times. These chapters introduce strategies for developing functions for repeated operations and identfying and fixing bottlenecks in those functions.\n  Slides  View all slides in new window  Download PDF of all slides\nRaster Data Models for Geographic Information  The Raster Data Model  Operations on vector data             Wickham, H. 2019. Advanced r. chapman; hall/CRC.\n  ","date":1631491200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1631491200,"objectID":"b0405fb0975b8cdddb0454677282c9f2","permalink":"http://isdrfall21.classes.spaseslab.com/content/04-content/","publishdate":"2021-09-13T00:00:00Z","relpermalink":"/content/04-content/","section":"content","summary":"Today we‚Äôll be exploring the raster data model and how it is implemented within the spatial packages in the R computing environment.\nResources These chapters are not ‚Äòprerequisite‚Äô reading for the week, but provide a lot of helpful background for raster proccessing in R.","tags":null,"title":"Raster data models for geographic information","type":"docs"},{"authors":null,"categories":null,"content":"Today we\u0026rsquo;ll build on the introductory discussion we were having about vector operations and the sf package. We\u0026rsquo;ll build a few vectors from scratch and then move on to explore a broader suite of common vector operations implemented by the sf package.\nA reminder about vector geometries in R You\u0026rsquo;ll recall that the sf package organizes the different types of vectors (e.g., points, lines, polygons) in to a hierarchical structure organized by complexity of geometries contained within an R object. For example, a single point will be a POINT, several points will be a MULTIPOINT, and an object containing points, polygons, and lines will be a GEOMETRYCOLLECTION. We need to be aware of what types of geometries and objects we have becasue some operations are restricted to particular types of objects or geometries as indicated by errors that read:\nError in UseMethod(\u0026quot;st_crs\u0026lt;-\u0026quot;) : no applicable method for 'st_crs\u0026lt;-' applied to an object of class \u0026quot;c('XY', 'POINT', 'sfg')\u0026quot;\nwhich indicates that the function (st_crs) does not have a method defined for the type of object it\u0026rsquo;s being applied to. Note that the function inside UseMethod will be replaced by whichever function you\u0026rsquo;re attempting to apply to your object and the object of class component will vary based on the function and the object class.\n   type description     POINT single point geometry   MULTIPOINT set of points   LINESTRING single linestring (two or more points connected by straight lines)   MULTILINESTRING set of linestrings   POLYGON exterior ring with zero or more inner rings, denoting holes   MULTIPOLYGON set of polygons   GEOMETRYCOLLECTION set of the geometries above    As is, these geometries are built on vertices with coordinates that are based on the Cartesian plane and thus are \u0026ldquo;spatial\u0026rdquo;, but not georeferenced or geographic. In order to convert these sf geometries to a geogrphic object (i.e., one with a CRS and whose location depicts and actual spot on the earth\u0026rsquo;s surface), we use st_sfc() to create a simple feature geography list column (see ?st_sfc for an example of this workflow).\nConventions in sf and the tidyverse One of the benefits of the sf package is that it is designed to interface with the tidyverse suite of packages. One of the appealing parts of working with tidyverse packages is that they share an underlying philosophy, data structure, and grammar. This can make life a lot easier as you move from getting your data into R, constructing a set of covariates (including those derived from spatial data), analyzing, and plotting (or mapping) those data. People have strong opinions about the tidyverse, but I find it to be an (eventually) useful way for people to gain some intuition for working in R. One of the grammatical conventions used in the tidyverse suite of packages is the use _ in function calls (this is known as snake case should you ever need to know that at a dinner party). The _ is typically used to separate the verb in a function call from its predicate. For example, bind_rows() in the dplyr package \u0026ldquo;binds\u0026rdquo; (the verb) rows (the predicate) wheras bind_cols() binds columns. For the sf package it\u0026rsquo;s slightly different in that most of the functions begin with a st_ or sf_ prefix to indicate that the function is designed to work on spatial objects followed by a word (or words) describing what the operation does (e.g., st_centroid() returns a MULTIPOINT object with each point located at the centroid of a polygon). We can classify these functions based on what they are expected to return:\n  Predicates: evaluate a logical statement asserting that a property is TRUE\n  Measures: return a numeric value with units based on the units of the CRS\n  Transformations: create new geometries based on input geometries.\n  We can also distinguish these functions based on how many geometries that operate on:\n Unary: operate on a single geometry at a time (meaning that if you have a MULTI* object the function works on each geometry individually) Binary: operate on pairs of geometries n-ary: operate on sets of geometries  We\u0026rsquo;ll focus on the unary operators for now, but the binary and n-ary operators will become more important as we move to develop databases for spatial analysis.\nUnary predicates Unary predicates are helpful \u0026lsquo;checks\u0026rsquo; to make sure the object you are working with has the properties you might expect. Are the geometries valid? Is the data projected? Because we are asking a set of TRUE/FALSE questions, these functions are specified as st_is_:\n   predicate asks\u0026hellip;     simple is the geometry self-intersecting (i.e., simple)?   valid is the geometry valid?   empty is the geometry column of an object empty?   longlat does the object have geographic coordinates? (FALSE if coords are projected, NA if no crs)   is(geometry, class) is the geometry of a particular class?    nc \u0026lt;- st_read(system.file(\u0026quot;shape/nc.shp\u0026quot;, package=\u0026quot;sf\u0026quot;))  ## Reading layer `nc' from data source ## `/Library/Frameworks/R.framework/Versions/4.0/Resources/library/sf/shape/nc.shp' ## using driver `ESRI Shapefile' ## Simple feature collection with 100 features and 14 fields ## Geometry type: MULTIPOLYGON ## Dimension: XY ## Bounding box: xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965 ## Geodetic CRS: NAD27  st_is_longlat(nc)  ## [1] TRUE  st_is_valid(ncnary measures Measures return a quantity that describes the geometry\n   measure returns     dimension 0 for points, 1 for linear, 2 for polygons, possibly NA for empty geometries   area the area of a geometry   length the length of a linear geometry    distance is a binary measure that returns the distance between pairs of geometries either within a single object or between features in multiple objects\nhead(st_area(nc))  ## Units: [m^2] ## [1] 1137107793 610916077 1423145355 694378925 1520366979 967504822  st_distance(nc)[1:5,1:5]  ## Units: [m] ## [,1] [,2] [,3] [,4] [,5] ## [1,] 0.0 0.0 25591.8 439493.26 299049.94 ## [2,] 0.0 0.0 0.0 408416.68 268284.09 ## [3,] 25591.8 0.0 0.0 366648.94 226461.23 ## [4,] 439493.3 408416.7 366648.9 0.00 67066.43 ## [5,] 299049.9 268284.1 226461.2 67066.43 0.00  Unary transformers Unary transformations work on a per object basis and return a new geometry for each geometry. These are a few of the most common, we\u0026rsquo;ll encounter a few more as the semester continues.\n   transformer returns a geometry \u0026hellip;     centroid of type POINT with the geometry\u0026rsquo;s centroid   buffer that is this larger (or smaller) than the input geometry, depending on the buffer size   jitter that was moved in space a certain amount, using a bivariate uniform distribution   boundary with the boundary of the input geometry   convex_hull that forms the convex hull of the input geometry   line_merge after merging connecting LINESTRING elements of a MULTILINESTRING into longer LINESTRINGs.   make_valid that is valid   node with added nodes to linear geometries at intersections without a node; only works on individual linear geometries   point_on_surface with a (arbitrary) point on a surface   polygonize of type polygon, created from lines that form a closed ring   segmentize a (linear) geometry with nodes at a given density or minimal distance   simplify simplified by removing vertices/nodes (lines or polygons)   split that has been split with a splitting linestring   transform transformed or convert to a new coordinate reference system (last week)   collection_extract with subgeometries from a GEOMETRYCOLLECTION of a particular type   cast that is converted to another type    plot(st_geometry(nc)) plot(st_geometry(st_centroid(nc)), add=TRUE, col='red')  ## Warning in st_centroid.sf(nc): st_centroid assumes attributes are constant over ## geometries of x  Using sf and the tidyverse As I mentioned, one of the benefits of using the sf package is that commands from the other tidyverse package have defined methods for spatial objects. The dplyr package has a ton of helpful functions for maniputlating data in R. For example, we might select a single row from a shapefile based on the value of its attributes by using the dplyr::filter() command:\ndurham.cty \u0026lt;- nc %\u0026gt;% filter(., NAME == \u0026quot;Durham\u0026quot;) ## We can also use the bracket approach durham.cty2 \u0026lt;- nc[nc$NAME == \u0026quot;Durham\u0026quot;,] plot(st_geometry(nc)) plot(st_geometry(durham.cty), add=TRUE, col=\u0026quot;blue\u0026quot;)  Or perhaps we only want a few of the columns in the dataset (because shapefiles always have lots of extra stuff). We can use dplyr::select() to choose columns by name:\nnc.select \u0026lt;- nc %\u0026gt;% select(., c(\u0026quot;CNTY_ID\u0026quot;, \u0026quot;NAME\u0026quot;, \u0026quot;FIPS\u0026quot;)) plot(nc.select)  Notice that the geometries are sticky, this will be important later\n","date":1631145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1631145600,"objectID":"f32819d9b39039a397d58dd37d2f3efa","permalink":"http://isdrfall21.classes.spaseslab.com/example/03-example/","publishdate":"2021-09-09T00:00:00Z","relpermalink":"/example/03-example/","section":"example","summary":"Today we\u0026rsquo;ll build on the introductory discussion we were having about vector operations and the sf package. We\u0026rsquo;ll build a few vectors from scratch and then move on to explore a broader suite of common vector operations implemented by the sf package.","tags":null,"title":"Working with vectors in R","type":"docs"},{"authors":null,"categories":null,"content":"Today we‚Äôll focus on learning the vector data model and how it is implemented within the spatial packages in the R computing environment.\nResources    The introductory vignette for the sf package has a lot of useful info on sf objects and conventions.\n   Section 2.2 on Vector Data and Sections 5.1-5.3 on Geographic Operations in Lovelace et al. (Lovelace et al. 2019) - for more details about vectors and geometric operations on vectors.\n   Section 3.1 and 3.2 of Spatial Data Science, a bookdown project by Edzer Pebesma and Roger Bivand (of the sf, sp, rgeos, and rgdal packages)\n  Slides The slides for today‚Äôs lesson are available online as an HTML file. Use the buttons below to open the slides either as an interactive website or as a static PDF (for printing or storing for later). You can also click in the slides below and navigate through them with your left and right arrow keys.\n View all slides in new window  Download PDF of all slides\nVector Data Models for Geographic Information  Types of vector data  Creating vector data in `R`  Operations on vector data                Lovelace, R., J. Nowosad, and J. Muenchow. 2019. Geocomputation with R. CRC Press.\n  ","date":1630886400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1630886400,"objectID":"0316e4026587433def89bf10f5c614d0","permalink":"http://isdrfall21.classes.spaseslab.com/content/03-content/","publishdate":"2021-09-06T00:00:00Z","relpermalink":"/content/03-content/","section":"content","summary":"Today we‚Äôll focus on learning the vector data model and how it is implemented within the spatial packages in the R computing environment.\nResources    The introductory vignette for the sf package has a lot of useful info on sf objects and conventions.","tags":null,"title":"Vector data models for geographic information","type":"docs"},{"authors":null,"categories":null,"content":"Today\u0026rsquo;s exercise and assignment will focus on getting different types of spatial data into R; exploring the CRS, extent, and resolution of those objects; and aligning objects with different projections. We\u0026rsquo;ll look at ways to do this using the sf, sp (with rgdal), raster, and terra packages.\nGetting started Remember that we\u0026rsquo;ll be using GitHub classroom so you\u0026rsquo;ll need to introduce yourself to git and then clone the Assignment 2 repository. The instructions are in Example 1\nLoading the data I created a few small shapefiles to help illustrate the basic workflow for bringing in both shapefiles and rasters. In the code below, you\u0026rsquo;ll need to change the filepath object to match the path to our shared direction. This is not an ideal practice as it makes it challenging for others to automatically reproduce your analaysis, but I\u0026rsquo;m using here because GitHub can\u0026rsquo;t handle large files like rasters or shapefiles and transferring files is more than I want to take on today\u0026hellip;.\nI\u0026rsquo;ll demonstrate loading the data using rgdal, sp, and sf packages (for shapefiles) and the raster and terra packages (for rasters).\n#load the necessary libraries library(sp) library(sf)  ## Linking to GEOS 3.9.1, GDAL 3.2.2, PROJ 7.2.1  library(rgdal)  ## rgdal: version: 1.5-23, (SVN revision 1121) ## Geospatial Data Abstraction Library extensions to R successfully loaded ## Loaded GDAL runtime: GDAL 3.1.4, released 2020/10/20 ## Path to GDAL shared files: /Library/Frameworks/R.framework/Versions/4.0/Resources/library/rgdal/gdal ## GDAL binary built with GEOS: TRUE ## Loaded PROJ runtime: Rel. 6.3.1, February 10th, 2020, [PJ_VERSION: 631] ## Path to PROJ shared files: /Library/Frameworks/R.framework/Versions/4.0/Resources/library/rgdal/proj ## Linking to sp version:1.4-5 ## To mute warnings of possible GDAL/OSR exportToProj4() degradation, ## use options(\u0026quot;rgdal_show_exportToProj4_warnings\u0026quot;=\u0026quot;none\u0026quot;) before loading rgdal.  library(raster) library(terra)  ## terra version 1.2.11  ## ## Attaching package: 'terra'  ## The following object is masked from 'package:rgdal': ## ## project  filepath \u0026lt;- \u0026quot;/Users/mattwilliamson/Google Drive/My Drive/TEACHING/Intro_Spatial_Data_R/Data/session04/\u0026quot; #shapefiles id.sp \u0026lt;- readOGR(paste0(filepath, \u0026quot;ID.shp\u0026quot;))  ## OGR data source with driver: ESRI Shapefile ## Source: \u0026quot;/Volumes/GoogleDrive/My Drive/TEACHING/Intro_Spatial_Data_R/Data/session04/ID.shp\u0026quot;, layer: \u0026quot;ID\u0026quot; ## with 1 features ## It has 14 fields  id.sf \u0026lt;- st_read(paste0(filepath, \u0026quot;ID.shp\u0026quot;))  ## Reading layer `ID' from data source ## `/Volumes/GoogleDrive/My Drive/TEACHING/Intro_Spatial_Data_R/Data/session04/ID.shp' ## using driver `ESRI Shapefile' ## Simple feature collection with 1 feature and 14 fields ## Geometry type: POLYGON ## Dimension: XY ## Bounding box: xmin: -117.243 ymin: 41.98818 xmax: -111.0435 ymax: 49.00085 ## Geodetic CRS: NAD83  #rasters id.raster \u0026lt;- raster(paste0(filepath, \u0026quot;idval.tif\u0026quot;)) id.rast \u0026lt;- rast(paste0(filepath, \u0026quot;idval.tif\u0026quot;))  Check the geometry Polygon data is often developed by hand using a technique called \u0026lsquo;heads-up digitizing\u0026rsquo;. This can lead to some subtle, but important errors in the geometry that eventually create problems for us down the road. We can check that using st_is_vald() and if that returns FALSE we can use st_make_valid() to fix it (hopefully).\nst_is_valid(id.sf)  ## [1] TRUE  #luckily it's true so we don't need st_make_valid() here  Once we\u0026rsquo;ve got the data into R, we probably want to take a look at it. We can do that quickly just using the base plot function (we\u0026rsquo;ll use fancier methods later).\nplot(id.raster) plot(id.sp, add=TRUE)  plot(id.rast) plot(st_geometry(id.sf), add=TRUE)  What do you notice? The Idaho shapefile doesn\u0026rsquo;t show up!! Leading us to our next step:\nCheck the projections As we discussed in class, we can\u0026rsquo;t really do much with spatial data in R until we get all the pieces aligned. The plot suggests the data aren\u0026rsquo;t in the same projection, but we can check that more formally, here. Notice the use of as to coerce the sf object into a Spatial* object. This is necessary in a number of places because certain operations are only defined for a subset of R objects.\nproj4string(id.sp) == proj4string(id.raster)  ## Warning in proj4string(id.sp): CRS object has comment, which is lost in output  ## [1] FALSE  st_crs(id.sf) == st_crs(id.raster)  ## [1] FALSE  identicalCRS(id.sp, id.raster)  ## [1] FALSE  identicalCRS(as(id.sf, \u0026quot;Spatial\u0026quot;), id.raster)  ## [1] FALSE  Reproject the data As the tests above indicate, our data are not in the same projection. We need to reproject them!! Here are a few ways to do it. Notice that I demonstrate how to project the rasters to the shapefile projection - I generally don\u0026rsquo;t recommend this, but am showing it here for completeness.\nnew.crs \u0026lt;- CRS(\u0026quot;+init=epsg:2163\u0026quot;)  ## Warning in showSRID(uprojargs, format = \u0026quot;PROJ\u0026quot;, multiline = \u0026quot;NO\u0026quot;, prefer_proj = ## prefer_proj): Discarded datum unknown in Proj4 definition  id.sf.proj \u0026lt;- id.sf %\u0026gt;% st_transform(., new.crs) id.sp.proj \u0026lt;- spTransform(id.sp, new.crs) id.raster.proj \u0026lt;- projectRaster(id.raster, res = 480, crs=new.crs) id.rast.proj \u0026lt;- terra::project(id.rast, as(id.raster.proj, \u0026quot;SpatRaster\u0026quot;))  Let\u0026rsquo;s see if that worked Always good to double-check\u0026hellip;\nproj4string(id.sp.proj) == proj4string(id.raster.proj)  ## Warning in proj4string(id.sp.proj): CRS object has comment, which is lost in ## output  ## [1] TRUE  st_crs(id.sf.proj) == st_crs(id.raster.proj)  ## [1] TRUE  identicalCRS(id.sp.proj, id.raster.proj)  ## [1] TRUE  identicalCRS(as(id.sf.proj, \u0026quot;Spatial\u0026quot;), id.raster.proj)  ## [1] TRUE  Plot it again Now it looks like everything is lined up, we should be able to generate a quick plot to look at that data\nplot(id.raster.proj) plot(id.sp.proj, add=TRUE)  Or using the sf st_geometry command:\nplot(id.rast.proj) plot(st_geometry(id.sf.proj), add=TRUE)  ","date":1630454400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1630454400,"objectID":"f8bbc05c75c3ee5e0fdfe484a8034c6c","permalink":"http://isdrfall21.classes.spaseslab.com/example/02-example/","publishdate":"2021-09-01T00:00:00Z","relpermalink":"/example/02-example/","section":"example","summary":"Today\u0026rsquo;s exercise and assignment will focus on getting different types of spatial data into R; exploring the CRS, extent, and resolution of those objects; and aligning objects with different projections. We\u0026rsquo;ll look at ways to do this using the sf, sp (with rgdal), raster, and terra packages.","tags":null,"title":"Workflows for getting spatial data into R","type":"docs"},{"authors":null,"categories":null,"content":"This is here for ease of reference; you should complete your assignment using your individual GitHub Classroom repositories\nYour assignment The goal for this assignment is to ensure that you:\n  have access to our Rstudio server and shared data folder\n  can access the assignments in Github Classroom\n  are able to determine what data structure you\u0026rsquo;re working with and what data types are contained with the object\n  can succesfully knit an Rmarkdown document to html\n  Step 1: Load your packages In general, I do this in one code chunk at the beginning of the Rmarkdown document so that users know exactly what packages they\u0026rsquo;ll need and can make decisions about if/how they want to install them.\nlibrary(tidyverse)  ## ‚îÄ‚îÄ Attaching packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 1.3.1 ‚îÄ‚îÄ  ## ‚úì ggplot2 3.3.5 ‚úì purrr 0.3.4 ## ‚úì tibble 3.1.3 ‚úì dplyr 1.0.7 ## ‚úì tidyr 1.1.3 ‚úì stringr 1.4.0 ## ‚úì readr 2.0.0 ‚úì forcats 0.5.1  ## ‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag()  Step 2: Load the data For the next few weeks, we\u0026rsquo;ll be using data from the High Country News Land Grab University project. These data depict the role of expropriated Indigenous land in funding the fifty-two land-grant universities in the United States. They contain information on nearly 11 million acres of Indigenous land tanke from ~250 tribes, bands and communities through a multitude of treaties and violent land seizures. Check it out as it will help you understand what these data are depicting.\ncsv.list \u0026lt;- list.files('/opt/data/session02/CSVs/', pattern = \u0026quot;*.csv\u0026quot;, full.names = TRUE) data \u0026lt;- lapply(csv.list, function (x) read.csv(x))    Question 1: what is lapply doing in the statement above?\n  Question 2: what type of data is contained in the 3 column of the 2nd element of the data object? (show the code you used to figure it out by inserting a code chunk)?\n  Question 3: what happens if you run the above code with the the read_csv function from the tidyverse package?\n  Question 4: Use the first element of the data object to determine the total amount paid for the land depicted in that object (HINT: you\u0026rsquo;ll need to coerce the data into a different format)\n  Remember - edit this document and knit to .html within your GitHub Classroom repo and commit and push those changes\n","date":1630022400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1630022400,"objectID":"c186310b9aadf753f89c6c4c2cc801f3","permalink":"http://isdrfall21.classes.spaseslab.com/assignment/01-exercise/","publishdate":"2021-08-27T00:00:00Z","relpermalink":"/assignment/01-exercise/","section":"assignment","summary":"This is here for ease of reference; you should complete your assignment using your individual GitHub Classroom repositories\nYour assignment The goal for this assignment is to ensure that you:","tags":null,"title":"Introduction to class resources and data structures in R","type":"docs"},{"authors":null,"categories":null,"content":"Today we‚Äôll start getting into the nitty-gritty of geographic data and how the various elements describing spatial position are managed within R.\nObjectives By the end of today, you should be able to:\n  Describe several ways to load spatial data into R\n  Define a coordinate reference system and describe why it is important\n  Identify the different ways projections are expressed in R and gdal\n  Describe the other key elements of spatial data\n  Readings    Coordinate Reference Systems Section 2.4 in Lovelace et al., Geocomputation with R (Lovelace et al. 2019)\n   Chapter 1: Introduction in Essentials of Geographic Information Systems by Campbell and Shin (Campbell and Shin 2011)\n   Scale and Projections - a portion of Mapping, Society, and Technology an Laura Matson and Melinda Kernik.\n  Slides  View all slides in new window  Download PDF of all slides\nWelcome  Defining location  The CRS  Other important elements                Campbell, J., and M. Shin. 2011. Essentials of geographic information systems. Saylor Foundation.\n Lovelace, R., J. Nowosad, and J. Muenchow. 2019. Geocomputation with R. CRC Press.\n  ","date":1630022400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1630022400,"objectID":"41e89a34ca2fdd432a89cf4ae93cfcc3","permalink":"http://isdrfall21.classes.spaseslab.com/content/02-content/","publishdate":"2021-08-27T00:00:00Z","relpermalink":"/content/02-content/","section":"content","summary":"Today we‚Äôll start getting into the nitty-gritty of geographic data and how the various elements describing spatial position are managed within R.\nObjectives By the end of today, you should be able to:","tags":null,"title":"Spatial data is special data","type":"docs"},{"authors":null,"categories":null,"content":"Let\u0026rsquo;s \u0026ldquo;git\u0026rdquo; started We are using GitHub classroom for all of the assignments in this course. This allows each of you to have your own repositories for version control and backup of your code without the worries of stepping on someone else toes. The goal of this class is not to have you become a \u0026lsquo;master\u0026rsquo; of all things git, but I am hoping you\u0026rsquo;ll learn the utility of version control and adopt as much of it as make sense for you and your workflows.\nAccept the invitation to the assignment repo The first thing you\u0026rsquo;ll need to do is accept the invitation to \u0026lsquo;assignment-1` repository (repo). This should automatically clone (make an exact copy) of the assignment repo in your personal account.\nMaking sure Rstudio server can access your GitHub account Unfortunately, GitHub has ended its support for username/password remote authentication. Instead, it uses something called a Personal Access Token. You can read more about it here if you are interested, but the easiest way to deal with this is by following Jenny Bryan\u0026rsquo;s happygitwithr recommended approach:\n Introduce yourself to git: There are a number of ways to do this, but I find this to be the easiest  library(usethis) #you may need to install this using install.packages('usethis') use_git_config(user.name = \u0026quot;Jane Doe\u0026quot;, user.email = \u0026quot;jane@example.org\u0026quot;) #your info here  Get a PAT if you don\u0026rsquo;t have one already (make sure you save it somewhere)  usethis::create_github_token()  Store your credential for use in RStudio  library(gitcreds) #may need to install this too gitcreds_set() #should prompt you for your pat - paste it here  Verify that Rstudio has saved your credential  gitcreds_get()  R should return something that looks like this:\nBring the project into RStudio Go to File\u0026gt;New Project and choose the \u0026ldquo;Version Control\u0026rdquo; option Select \u0026ldquo;Git\u0026rdquo; (Not Subversion) paste the link from the \u0026ldquo;Clone Repository\u0026rdquo; button into the \u0026ldquo;Repository URL\u0026rdquo; space  Verify that the \u0026ldquo;Git\u0026rdquo; tab is available and that your project is shown in the upper right-hand corner Assuming all this has worked, you should be able to click on the \u0026ldquo;Git\u0026rdquo; tab and see something like this:\nBasic workflow   Everytime you begin working on code, make sure you \u0026ldquo;Pull\u0026rdquo; from the remote repository to make sure you have the most recent version of things (this is especially important when you are collaborating with people).\n  Make some changes to code\n  Save those changes\n  \u0026ldquo;Commit\u0026rdquo; those changes - Think of commits as \u0026lsquo;breadcrumbs\u0026rsquo; they help you remember where you were in the coding process in case you need to revert back to a previous version. Your commit messages should help you remember what was \u0026lsquo;happening\u0026rsquo; in the code when you made the commit. In general, you should save and commit fairly frequently and especially everytime you do something \u0026lsquo;consequential\u0026rsquo;. Git allows you to \u0026lsquo;turn back time\u0026rsquo;, but that\u0026rsquo;s only useful if you left enough information to get back to where you want to be.\n  Push your work to the remote - when you\u0026rsquo;re done working on the project for the day, push your local changes to the remote. This will ensure that if you switch computers or if someone else is going to work on the project, you (or they) will have the most recent version. Plus, if you don\u0026rsquo;t do this, step 1 will really mess you up.\n  R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com. We\u0026rsquo;ll be using Rmarkdown for the assignments in class and this website was built (generally) using Rmarkdown. You can create new Rmarkdown documents by going to File \u0026raquo; New File \u0026raquo; New Rmarkdown (we\u0026rsquo;ll be using html for this class)\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document.\nThere are lots of helpful resources to help you get started using Rmarkdown. There\u0026rsquo;s a cheatsheet and a much longer user\u0026rsquo;s guide. I don\u0026rsquo;t expect you to become an expert in Rmarkdown, but it is a helpful way to keep all of your thougths and code together in a single, coherent document. Getting proficient in Rmarkdown and git allows you to work with collaborators on an analysis, graphics, and manuscript all within a single platform. This fully-integrated workflow takes practice and patience (especially when you have collaborators that are new to this approach), this course is just an initial step down that path. I\u0026rsquo;ll do my best to keep it simple - please let me know if you have questions!\nYou can embed an R code chunk like this:\nsummary(cars)  ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00  Including Plots You can also embed plots, for example:\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot.\nData Types and Structures Data Types Okay, now that we have all of those details out of the way, let\u0026rsquo;s take a look at data structures in R. As we discussed,R has six basic types of data: numeric, integer, logical, complex, character, and raw. For this class, we won\u0026rsquo;t bother with complex or raw as you are unlikely to encounter them in your introductory spatial explorations.\n  Numeric data are numbers that contain a decimal. They can also be whole numbers\n  Integers are whole numbers (those numbers without a decimal point).\n  Logical data take on the value of either TRUE or FALSE. There‚Äôs also another special type of logical called NA to represent missing values.\n  Character data represent string values. You can think of character strings as something like a word (or multiple words). A special type of character string is a factor, which is a string but with additional attributes (like levels or an order). Factors become important in the analyses and visualizations we\u0026rsquo;ll attempt later in the course.\n  There are a variety of ways to learn more about the structure of different data types:\n class() - returns the type of object (high level) typeof() - returns the type of object (low level) length() tells you about the length of an object attributes() - does the object have any metadata  num \u0026lt;- 2.2 class(num)  ## [1] \u0026quot;numeric\u0026quot;  typeof(num)  ## [1] \u0026quot;double\u0026quot;  y \u0026lt;- 1:10 y  ## [1] 1 2 3 4 5 6 7 8 9 10  class(y)  ## [1] \u0026quot;integer\u0026quot;  typeof(y)  ## [1] \u0026quot;integer\u0026quot;  length(y)  ## [1] 10  b \u0026lt;- \u0026quot;3\u0026quot; class(b)  ## [1] \u0026quot;character\u0026quot;  is.numeric(b)  ## [1] FALSE  c \u0026lt;- as.numeric(b) class(c)  ## [1] \u0026quot;numeric\u0026quot;  Data Structures You can store information in a variety of ways in R. The types we are most likely to encounter this semester are:\n Vectors: a collection of elements that are typically character, logical, integer, or numeric.  #sometimes we'll need to make sequences of numbers to facilitate joins series \u0026lt;- 1:10 series.2 \u0026lt;- seq(10) series.3 \u0026lt;- seq(from = 1, to = 10, by = 0.1) series  ## [1] 1 2 3 4 5 6 7 8 9 10  series.2  ## [1] 1 2 3 4 5 6 7 8 9 10  series.3  ## [1] 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 ## [16] 2.5 2.6 2.7 2.8 2.9 3.0 3.1 3.2 3.3 3.4 3.5 3.6 3.7 3.8 3.9 ## [31] 4.0 4.1 4.2 4.3 4.4 4.5 4.6 4.7 4.8 4.9 5.0 5.1 5.2 5.3 5.4 ## [46] 5.5 5.6 5.7 5.8 5.9 6.0 6.1 6.2 6.3 6.4 6.5 6.6 6.7 6.8 6.9 ## [61] 7.0 7.1 7.2 7.3 7.4 7.5 7.6 7.7 7.8 7.9 8.0 8.1 8.2 8.3 8.4 ## [76] 8.5 8.6 8.7 8.8 8.9 9.0 9.1 9.2 9.3 9.4 9.5 9.6 9.7 9.8 9.9 ## [91] 10.0  c(series.2, series.3)  ## [1] 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 1.0 1.1 1.2 1.3 1.4 ## [16] 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 ## [31] 3.0 3.1 3.2 3.3 3.4 3.5 3.6 3.7 3.8 3.9 4.0 4.1 4.2 4.3 4.4 ## [46] 4.5 4.6 4.7 4.8 4.9 5.0 5.1 5.2 5.3 5.4 5.5 5.6 5.7 5.8 5.9 ## [61] 6.0 6.1 6.2 6.3 6.4 6.5 6.6 6.7 6.8 6.9 7.0 7.1 7.2 7.3 7.4 ## [76] 7.5 7.6 7.7 7.8 7.9 8.0 8.1 8.2 8.3 8.4 8.5 8.6 8.7 8.8 8.9 ## [91] 9.0 9.1 9.2 9.3 9.4 9.5 9.6 9.7 9.8 9.9 10.0  class(series.3)  ## [1] \u0026quot;numeric\u0026quot;  typeof(series.3)  ## [1] \u0026quot;double\u0026quot;  length(series.3)  ## [1] 91   Missing Data: R supports missing data in most of the data structures we use, but they can lead to some strange behaviors. Here are a few ways to find missing data:  x \u0026lt;- c(\u0026quot;a\u0026quot;, NA, \u0026quot;c\u0026quot;, \u0026quot;d\u0026quot;, NA) is.na(x)  ## [1] FALSE TRUE FALSE FALSE TRUE  anyNA(x)  ## [1] TRUE   Matrices: are an extension of the numeric or character vectors. They are not a separate type of object but simply an atomic vector with dimensions; the number of rows and columns. As with atomic vectors, the elements of a matrix must be of the same data. Matrices are the foundation of rasters, which we\u0026rsquo;ll be discussing frequently throughout the course  #matrices are filled columnwise in R m \u0026lt;- matrix(1:6, nrow = 2, ncol = 3) dim(m)  ## [1] 2 3  x \u0026lt;- 1:3 y \u0026lt;- 10:12 a \u0026lt;- cbind(x, y) dim(a)  ## [1] 3 2  a[3,1]  ## x ## 3  b \u0026lt;- rbind(x, y) dim(b)  ## [1] 2 3  b[1,3]  ## x ## 3   Lists: Lists essentially act like containers in R - they can hold a variety of different data types and structures including more lists. We use lists a lot for functional programming in R where we can apply a function to each element in a list. We\u0026rsquo;ll see this with extracting values from multiple rasters. We can extract elements of lists usin [] and [[]]  x \u0026lt;- list(1, \u0026quot;a\u0026quot;, TRUE, 1+4i) x  ## [[1]] ## [1] 1 ## ## [[2]] ## [1] \u0026quot;a\u0026quot; ## ## [[3]] ## [1] TRUE ## ## [[4]] ## [1] 1+4i  #adding names xlist \u0026lt;- list(a = \u0026quot;Waldo\u0026quot;, b = 1:10, data = head(mtcars)) xlist  ## $a ## [1] \u0026quot;Waldo\u0026quot; ## ## $b ## [1] 1 2 3 4 5 6 7 8 9 10 ## ## $data ## mpg cyl disp hp drat wt qsec vs am gear carb ## Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 ## Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 ## Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 ## Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 ## Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 ## Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1  xlist[[1]]  ## [1] \u0026quot;Waldo\u0026quot;  xlist[[3]]  ## mpg cyl disp hp drat wt qsec vs am gear carb ## Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 ## Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 ## Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 ## Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 ## Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 ## Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1  xlist[[3]][1]  ## mpg ## Mazda RX4 21.0 ## Mazda RX4 Wag 21.0 ## Datsun 710 22.8 ## Hornet 4 Drive 21.4 ## Hornet Sportabout 18.7 ## Valiant 18.1  xlist[[3]][1,2]  ## [1] 6  xlist[3][1]  ## $data ## mpg cyl disp hp drat wt qsec vs am gear carb ## Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 ## Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 ## Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 ## Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 ## Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 ## Valiant 18.1 6 225 105 2.76 3.460 20.22 1 0 3 1   Data Frames: data frames resemble that tabular datasets you might be used to in spreadsheet programs and are probably one of the most common types of data in R. A data frame is a special type of list where every element has the same length (but can have different types of data). We\u0026rsquo;ll be reading in a number of data frames for this first assignment.  dat \u0026lt;- data.frame(id = letters[1:10], x = 1:10, y = 11:20) dat  ## id x y ## 1 a 1 11 ## 2 b 2 12 ## 3 c 3 13 ## 4 d 4 14 ## 5 e 5 15 ## 6 f 6 16 ## 7 g 7 17 ## 8 h 8 18 ## 9 i 9 19 ## 10 j 10 20  is.list(dat)  ## [1] TRUE  class(dat)  ## [1] \u0026quot;data.frame\u0026quot;  #lots of ways to look at data in data frames str(dat) #compact summary of the structure of a dataframe  ## 'data.frame':\t10 obs. of 3 variables: ## $ id: chr \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; ... ## $ x : int 1 2 3 4 5 6 7 8 9 10 ## $ y : int 11 12 13 14 15 16 17 18 19 20  head(dat) #gives the first 6 rows similar to tail()  ## id x y ## 1 a 1 11 ## 2 b 2 12 ## 3 c 3 13 ## 4 d 4 14 ## 5 e 5 15 ## 6 f 6 16  dim(dat)  ## [1] 10 3  colnames(dat)  ## [1] \u0026quot;id\u0026quot; \u0026quot;x\u0026quot; \u0026quot;y\u0026quot;  ## accessing elements of a dataframe dat[1,3]  ## [1] 11  dat[[\u0026quot;y\u0026quot;]]  ## [1] 11 12 13 14 15 16 17 18 19 20  dat$y  ## [1] 11 12 13 14 15 16 17 18 19 20   Tibbles: are similar to data frames, but allow for lists within columns. They are designed for use with the tidyverse (which we\u0026rsquo;ll explore more in future classes), but the primary reason for introducing them here is because they are the foundation of sf objects which we\u0026rsquo;ll use frequently in the weeks to come.  library(tidyverse)  ## ‚îÄ‚îÄ Attaching packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse 1.3.1 ‚îÄ‚îÄ  ## ‚úì ggplot2 3.3.5 ‚úì purrr 0.3.4 ## ‚úì tibble 3.1.3 ‚úì dplyr 1.0.7 ## ‚úì tidyr 1.1.3 ‚úì stringr 1.4.0 ## ‚úì readr 2.0.1 ‚úì forcats 0.5.1  ## ‚îÄ‚îÄ Conflicts ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ tidyverse_conflicts() ‚îÄ‚îÄ ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag()  dat.tib \u0026lt;- tibble(dat) is.list(dat.tib)  ## [1] TRUE  class(dat.tib)  ## [1] \u0026quot;tbl_df\u0026quot; \u0026quot;tbl\u0026quot; \u0026quot;data.frame\u0026quot;  #lots of ways to look at data in data frames str(dat.tib) #compact summary of the structure of a dataframe  ## tibble [10 √ó 3] (S3: tbl_df/tbl/data.frame) ## $ id: chr [1:10] \u0026quot;a\u0026quot; \u0026quot;b\u0026quot; \u0026quot;c\u0026quot; \u0026quot;d\u0026quot; ... ## $ x : int [1:10] 1 2 3 4 5 6 7 8 9 10 ## $ y : int [1:10] 11 12 13 14 15 16 17 18 19 20  head(dat.tib) #gives the first 6 rows similar to tail()  ## # A tibble: 6 √ó 3 ## id x y ## \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; ## 1 a 1 11 ## 2 b 2 12 ## 3 c 3 13 ## 4 d 4 14 ## 5 e 5 15 ## 6 f 6 16  dim(dat.tib)  ## [1] 10 3  colnames(dat.tib)  ## [1] \u0026quot;id\u0026quot; \u0026quot;x\u0026quot; \u0026quot;y\u0026quot;  ## accessing elements of a dataframe dat.tib[1,3]  ## # A tibble: 1 √ó 1 ## y ## \u0026lt;int\u0026gt; ## 1 11  dat.tib[[\u0026quot;y\u0026quot;]]  ## [1] 11 12 13 14 15 16 17 18 19 20  dat.tib$y  ## [1] 11 12 13 14 15 16 17 18 19 20  Many of the packages used for spatial operations in R rely on special objects (e.g., Spatial*, RasterLayer) that are combinations of these various elemental data types. That is why we are taking a little time to understand them before jumping into spatial data.\n","date":1629936000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1629936000,"objectID":"cf16b14ebe5afc7096236ebafb2e6426","permalink":"http://isdrfall21.classes.spaseslab.com/example/01-example/","publishdate":"2021-08-26T00:00:00Z","relpermalink":"/example/01-example/","section":"example","summary":"Let\u0026rsquo;s \u0026ldquo;git\u0026rdquo; started We are using GitHub classroom for all of the assignments in this course. This allows each of you to have your own repositories for version control and backup of your code without the worries of stepping on someone else toes.","tags":null,"title":"Introduction to course resources, Rmarkdown, and data in R","type":"docs"},{"authors":null,"categories":null,"content":"Today we‚Äôll focus on getting oriented to the course and the tools we‚Äôll be using throughout the semester. Readings are designed to help understand some of the ‚Äòrules‚Äô of R syntax and develop an understanding for manipulating different types of data in R.\nReadings   The syllabus, content, examples, and assignments pages for this class\n   Chapter 1 - 6 in Venables et al., An Introduction to R (Venables et al. 2009) - for a quick refresher on data types in R (it‚Äôs only 30 pages)\n   Lying with maps - a portion of Mapping, Society, and Technology an ebook by Eric Deluca and Sara Nelson.\n  Slides The slides for today‚Äôs lesson are available online as an HTML file. Use the buttons below to open the slides either as an interactive website or as a static PDF (for printing or storing for later). You can also click in the slides below and navigate through them with your left and right arrow keys.\n View all slides in new window  Download PDF of all slides\nWelcome  Plan for the day  Introductions  Why (not) R?  Class details                   Venables, W. N., D. M. Smith, R. D. C. Team, and others. 2009. An introduction to r. Citeseer.\n  ","date":1629763200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1629763200,"objectID":"24bdef858b9ebc83bb0134c283e06cf1","permalink":"http://isdrfall21.classes.spaseslab.com/content/01-content/","publishdate":"2021-08-24T00:00:00Z","relpermalink":"/content/01-content/","section":"content","summary":"Today we‚Äôll focus on getting oriented to the course and the tools we‚Äôll be using throughout the semester. Readings are designed to help understand some of the ‚Äòrules‚Äô of R syntax and develop an understanding for manipulating different types of data in R.","tags":null,"title":"Welcome to Space!!","type":"docs"},{"authors":["Matt Williamosn","Âê≥ÊÅ©ÈÅî"],"categories":["Demo","ÊïôÁ®ã"],"content":"Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It\u0026rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    The template is mobile first with a responsive design to ensure that your site looks stunning on every device.  Get Started  üëâ Create a new site üìö Personalize your site üí¨ Chat with the Wowchemy community or Hugo community üê¶ Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy üí° Request a feature or report a bug for Wowchemy ‚¨ÜÔ∏è Updating Wowchemy? View the Update Guide and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n‚ù§Ô∏è Click here to become a sponsor and help support Wowchemy\u0026rsquo;s future ‚ù§Ô∏è As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features ü¶Ñ‚ú®\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, ‰∏≠Êñá, and Portugu√™s Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"http://isdrfall21.classes.spaseslab.com/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome üëã We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","ÂºÄÊ∫ê"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":null,"categories":["R"],"content":"  R Markdown This is an R Markdown d.¬†Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932  Including Plots You can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;), col = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;), init.angle = -50, border = NA )  Figure 1: A fancy pie chart.   ","date":1606875194,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606875194,"objectID":"bf1eb249db79f10ace7d22321494165a","permalink":"http://isdrfall21.classes.spaseslab.com/post/2020-12-01-r-rmarkdown/","publishdate":"2020-12-01T21:13:14-05:00","relpermalink":"/post/2020-12-01-r-rmarkdown/","section":"post","summary":"R Markdown This is an R Markdown d.¬†Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"},{"authors":null,"categories":null,"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python import pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head()  Charts Academic supports the popular Plotly chart format.\nSave your Plotly JSON in your page folder, for example chart.json, and then add the {{\u0026lt; chart data=\u0026quot;chart\u0026quot; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\n  (function() { let a = setInterval( function() { if ( typeof window.Plotly === 'undefined' ) { return; } clearInterval( a ); Plotly.d3.json(\"./line-chart.json\", function(chart) { Plotly.plot('chart-421386975', chart.data, chart.layout, {responsive: true}); }); }, 500 ); })();  You might also find the Plotly JSON Editor useful.\nMath Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file.\nTo render inline or block math, wrap your LaTeX math with $...$ or $$...$$, respectively.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |} {\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$  renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left |\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right |^2}$$\nExample inline math $\\nabla F(\\mathbf{x}_{n})$ renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the \\\\\\\\ math linebreak:\n$$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\\\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$  renders as\n$$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\\n1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ```  renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2]  An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good!  An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ```  renders as\ngantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d  An example class diagram:\n```mermaid classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() } ```  renders as\nclassDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() }  An example state diagram:\n```mermaid stateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*] ```  renders as\nstateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*]  Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example - [x] Write diagram example - [ ] Do something else  renders as\n Write math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |  renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Callouts Academic supports a shortcode for callouts, also referred to as asides, hints, or alerts. By wrapping a paragraph in {{% callout note %}} ... {{% /callout %}}, it will render as an aside.\n{{% callout note %}} A Markdown aside is useful for displaying notices, hints, or definitions to your readers. {{% /callout %}}  renders as\n A Markdown aside is useful for displaying notices, hints, or definitions to your readers.   Spoilers Add a spoiler to a page to reveal text, such as an answer to a question, after a button is clicked.\n{{\u0026lt; spoiler text=\u0026quot;Click to view the spoiler\u0026quot; \u0026gt;}} You found me! {{\u0026lt; /spoiler \u0026gt;}}  renders as\nClick to view the spoiler You found me!\n Icons Academic enables you to use a wide range of icons from Font Awesome and Academicons in addition to emojis.\nHere are some examples using the icon shortcode to render icons:\n{{\u0026lt; icon name=\u0026quot;terminal\u0026quot; pack=\u0026quot;fas\u0026quot; \u0026gt;}} Terminal {{\u0026lt; icon name=\u0026quot;python\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} Python {{\u0026lt; icon name=\u0026quot;r-project\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} R  renders as\n  Terminal\n Python\n R\nDid you find this page helpful? Consider sharing it üôå ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"http://isdrfall21.classes.spaseslab.com/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Academic","type":"post"},{"authors":["Matt Williamosn"],"categories":[],"content":"from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')     print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb  The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post's title date: 2019-09-01 # Put any other Academic metadata here... ---  Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.  Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"http://isdrfall21.classes.spaseslab.com/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"http://isdrfall21.classes.spaseslab.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"http://isdrfall21.classes.spaseslab.com/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"http://isdrfall21.classes.spaseslab.com/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"http://isdrfall21.classes.spaseslab.com/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"},{"authors":null,"categories":null,"content":"Today we‚Äôll continue our development of attributes (or covariates) in our spatial databases. We‚Äôll look at developing attributes that describe various geographic properties along with joining and subsetting based on locations.\nResources These chapters are not ‚Äòprerequisite‚Äô reading for the week, but provide a lot of helpful background for determining spatial relations between vector datasets and extracting those into attribute tables for subsequent visualization and analysis.\n   The Spatial Data Operations Chapter in (Lovelace et al. 2019) makes the concepts of a network concrete (literally) by using a transportation route example to illustrate the various components of a network analysis in R.\n   Attributes and Support of Spatial Data Science, a bookdown project by Edzer Pebesma and Roger Bivand (of the sf, sp, rgeos, and rgdal packages)\n  Slides  View all slides in new window  Download PDF of all slides\nBuilding spatial databases based on attributes  Workflows for spatial analysis  Databases and attributes  Common attribute operations  Joining (a)spatial data                   Lovelace, R., J. Nowosad, and J. Muenchow. 2019. Geocomputation with R. CRC Press.\n  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"708d5afb1e280ebc34cec655dde7f978","permalink":"http://isdrfall21.classes.spaseslab.com/content/07-content/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/content/07-content/","section":"content","summary":"Today we‚Äôll continue our development of attributes (or covariates) in our spatial databases. We‚Äôll look at developing attributes that describe various geographic properties along with joining and subsetting based on locations.","tags":null,"title":"Building spatial databases based on co-location","type":"docs"},{"authors":null,"categories":null,"content":"  Here‚Äôs our tentative plan for this semester. In general, we‚Äôll use Tuesdays to introduce the conceptual foundation for the different operations/analyses we are learning along with a few code demonstrations. Thursdays will be more of a guided ‚Äòlab‚Äô section where you can work through the examples and then begin your assignment.\nYou can subscribe to this calendar URL in Outlook, Google Calendar, or Apple Calendar:\n    Getting started Content Example Assignment  August 24\n(Session 1) Course orientation and data structures in R       August 26\n(Session 2) Getting started with RStudio online, git, and data in R      August 31\n(Session 3) What is so special about spatial data?       September 2\n(Session 4) Loading and exploring spatial data      September 3 Assignments for sessions 2 and 4 due         General classes of spatial data Content Example Assignment  September 7\n(Session 5) Spatial data as vectors       September 9\n(Session 6) Points, lines, polygons in R      September 14\n(Session 7) Spatial data as matrices, rasters, and stacks       September 16\n(Session 8) Manipulating rasters in R      September 17 Assignments for sessions 6 and 8 due        September 21\n(Session 9) Spatial data as networks       September 23\n(Session 10) Spatial network operations in R       Typical spatial data operations Content Example Assignment  September 28\n(Session 11) Developing spatial databases based on attributes       September 30\n(Session 12) Joining, filtering, and subsetting data in R      October 1 Assignments for sessions 10 and 12 due        October 5\n(Session 13) Developing spatial databases based on location       October 7\n(Session 14) Overlaps, joins, neighbors and networks in R      October 12\n(Session 15) Workflows for combining raster and vector data       October 14\n(Session 16) Deriving vector attributes from rasters in R      October 15 Assignments for sessions 14 and 16 due        October 18  Mini project 1 due        Visualizing spatial data Content Example Assignment  October 19\n(Session 17) Maps, truth, and cartography       October 21\n(Session 18) Static maps in R with ggplot and tmap      October 26\n(Session 19) Static maps in R (continued)     October 28\n(Session 20) Designing interactive webmaps       October 29 Assignments for Sessions 18 and 19 due        November 2\n(Session 21) Interactive webmaps with R      November 4\n(Session 22) Workday        November 5 Assignments for Session 21 Due        November 5  Mini project 2 due        Using spatial data in statistical workflows Content Example Assignment  November 9\n(Session 23) Quantifying spatial patterns       November 11\n(Session 24) Using R to characterize landscape patterns across scales      November 16\n(Session 25) Point patterns and spatial dependence       November 18\n(Session 26) Dispersion, variograms, and kriging in R      November 23\n(NA) No Class (Thanksgiving Break)        November 25\n(NA) No Class (Thanksgiving Break)        November 30\n(Session 27) Modelling the probability of occurrence in space       December 2\n(Session 28) Species (event) distribution models in R      November 29 Assignments for Session 24, 26, and 28 Due        December 7\n(Session 29) Conclusion and final project work       December 9\n(Session 30) Final project workday        December 16  Final project due (submit online by 11:59 PM)        \n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"3e223d7ba58b0122b42458e4cf52e04c","permalink":"http://isdrfall21.classes.spaseslab.com/schedule/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/schedule/","section":"","summary":"Here‚Äôs our tentative plan for this semester. In general, we‚Äôll use Tuesdays to introduce the conceptual foundation for the different operations/analyses we are learning along with a few code demonstrations.","tags":null,"title":"Schedule","type":"page"},{"authors":null,"categories":null,"content":"   Course Description Course Objectives Expectations Prerequisite Knowledge and Skills  Getting help with R problems  Course materials  R and RStudio  Course schedule Student Well-being Assignments and grades  Learning during a pandemic Late work  This course was designed with you in mind  This class‚Äôs community is inclusive. We use each other‚Äôs preferred names and pronouns. This course is accessible to students with disabilities. For students responsible for children  Academic Integrity   Instructor  Dr. Matt Williamson  Environmental Research Building 4125  mattwilliamson@boisestate.edu  @MwilliamsonMatt  Schedule an appointment   Course details  T TH  August 23 - December 10, 2021  10:30 - 11:45  Albertson\u0026#39;s Library Rm201C Slack   Contacting me E-mail and Slack are the best ways to get in contact with me. I will try to respond to all course-related e-mails and Slack messages within 48 hours (please allow additional time if you send your message during the weekend).\n \nCourse Description Spatial data are ubiquitous and form the basis for many of our inquiries into social, ecological, and evolutionary processes. As such, developing the skills necessary for incorporating spatial data into reproducible statistical workflows is critical. In this course, we will introduce the core components of manipulating spatial data within the R statistical environment including managing vector and raster data, projections, extraction of data values, interpolation, and plotting. Students will also learn to prototype and benchmark different workflows to aid in applying the appropriate tools to their research questions.\n Course Objectives Students completing this course should be able to:\n Develop reproducible workflows for manipulating, visualizing, and analyzing spatial data. Understand the unique components of spatial data and how those components fit in R‚Äôs data structures. Articulate the different formats of spatial data and identify which R packages are suited to each type. Describe why space matters for many social and ecological questions Implement a variety of descriptive and statistical spatial analyses. Leverage functional programming to automate and expedite spatial data operations.   Expectations Be nice. Be honest. Try hard.\nThe beauty of working with open source software is the community of users working on problems just like yours (and nothing like yours). Like any community, this one functions best when its members are kind, genuine, and make good-faith efforts to solve the problems along the way (more on this below).\n Prerequisite Knowledge and Skills You can succeed in this class.\nSome familiarity with the R statistical environment is helpful, but not necessary. My goal is to foster an environment where we are all learning from each other and sharing the tips and tricks that help us along the way. Learning R can be difficult at first‚Äîit‚Äôs like learning a new language, just like Spanish, French, or Chinese. I find it helpful to remember the following:\n It‚Äôs easy when you start out programming to get really frustrated and think, ‚ÄúOh it‚Äôs me, I‚Äôm really stupid,‚Äù or, ‚ÄúI‚Äôm not made out to program.‚Äù But, that is absolutely not the case. Everyone gets frustrated. I still get frustrated occasionally when writing R code. It‚Äôs just a natural part of programming. So, it happens to everyone and gets less and less over time. Don‚Äôt blame yourself. Just take a break, do something fun, and then come back and try again later. Even experienced programmers find themselves bashing their heads against seemingly intractable errors. If you‚Äôre finding yourself taking way too long hitting your head against a wall and not understanding, take a break, talk to classmates, e-mail me, etc.  ‚Äî Hadley Wickham   If you want to start learning a few of the basics, the Resources tab has some background information to get you started. Note that this is not an exhaustive list - the number of new R tutorials available on the internet seems to be growing exponentially.\nGetting help with R problems I am happy to help you work through your R coding challenges, but there are a lot of you and only one of me. Moreover, I may not always know exactly how to fix your problem any better than you do. In order to make sure that I am not the primary obstacle to your ability to complete the class assignements, I‚Äôm asking that you use the following steps prior to emailing/Slacking me with your coding questions.\nGoogle it! Searching for help with R on Google can sometimes be tricky. Google is generally smart enough to figure out what you mean when you search for ‚Äúr reproject polygons,‚Äù but if it does struggle, try searching for ‚Äúrstats‚Äù instead (e.g.¬†‚Äúrstats reproject polygons‚Äù). Also, since most of your R work will deal with the RSpatial packages, it‚Äôs often easier to just search for the package name and operation rather than the letter ‚Äúr‚Äù (e.g.¬†‚Äúsf reproject polygons‚Äù). I often paste the specific error message I get along with the spatial package I‚Äôm using to try and help Google find my solutions.\n Ask your colleagues We have an r_spatial chatroom at Slack where anyone in this class can ask questions and anyone can answer. Ask questions about code or class materials. You‚Äôll likely have similar questions as your peers, and you‚Äôll likely be able to answer other peoples‚Äô questions too. As a bonus, Slack allows you to format code to make it easy for all of us to copy and paste your code and distinguish it from the rest of your question.\n Use the forums Two of the most important sources for help with R-coding are StackOverflow (a Q\u0026amp;A site with hundreds of thousands of answers to all sorts of programming questions) and RStudio Community (a forum specifically designed for people using RStudio and the tidyverse (i.e.¬†you)). If you aren‚Äôt able to find an answer to your question from the thousands of existing questions, you can post your own. You‚Äôll need to create a reproducible example so others can figure out what you‚Äôre trying to do and what error you‚Äôre receiving, but you‚Äôd be amazed how helpful the community can be.\n Ask me! Sign up for a time to meet with me during student hours at https://calendly.com/mattwilliamson/. I‚Äôll want to know what searches you‚Äôve tried (so I don‚Äôt chase down answers that you‚Äôve already seen) and what approaches you‚Äôve tried and why they haven‚Äôt worked. Remember, I‚Äôm here to help (but not write your code for you).\n    Course materials R and RStudio R is free, but it can sometimes be a pain to install and configure especially when dealing with spatial packages (we‚Äôll talk more about why this is during class). To make life easier, I have set up an online RStudio server service, which lets you run a full instance of RStudio in your web browser. This means you won‚Äôt have to install anything on your computer and we should be able to avoid a number of the machine-specific issues that pop-up when 20 students have 20 different computers, operating systems (OS), etc. If you haven‚Äôt installed R on your local machine and would like some help getting that set up, there‚Äô a useful set of instructions for installing R, RStudio, and all the tidyverse packages here.\n  Course schedule This course is organized in 4 sections:\nData structures and using R as a Geographic Information System (GIS).\n Introduction to spatial datatypes used in R.\n Extracting, summarizing, and visualizing spatial data\n Common statistical analyses of spatial data\n  The schedule page provides an overview of what to expect each week.\nThis syllabus reflects a plan for the semester. Deviations may become necessary as the course progresses.\n Student Well-being If you are struggling for any reason (COVID, relationship, family, or life‚Äôs stresses) and believe these may impact your performance in the course, I encourage you to contact the Dean of Students at (208) 426-1527 or emaildeanofstundents@boisestate.edu for support. If you notice a significant change in your mood, sleep, feelings of hopelessness or a lack of self worth, consider connecting immediately with Counseling Services (1529 Belmont Street, Norco Building) at (208) 426-1459 or email healthservices@boisestate.edu.\n Assignments and grades You can find descriptions for all the assignments on the assignments page.\n   Assignment Points Percent    Exercises (14 √ó 15) 210 51%  Mini project 1 50 12%  Mini project 2 50 12%  Final project 100 24%  Total 410 ‚Äî        Grade Range Grade Range    A 90‚Äì100% D 60‚Äì69%  B 80‚Äì89% F \u0026lt; 60%  C 70‚Äì79%       Learning during a pandemic If you tell me you‚Äôre having trouble, I will not judge you or think less of you. I hope you‚Äôll extend me the same grace.\nYou never owe me personal information about your health (mental or physical). You are always welcome to talk to me about things that you‚Äôre going through, though. If I can‚Äôt help you, I usually know somebody who can.\nIf you need extra help, or if you need more time with something, or if you feel like you‚Äôre behind or not understanding everything, do not suffer in silence! Talk to me! I will work with you. I promise.\n Late work With the exception of the mini projects and the final project, there‚Äôs no such late work. I would highly recommend staying caught up as much as possible, but if you need to turn something in late, that‚Äôs fine‚Äîthere‚Äôs no penalty.\n  This course was designed with you in mind I developed this course to provide a welcoming environment and effective, equitable learning experience for all students. If you encounter barriers in this course, please bring them to my attention so that I may work to address them.\nThis class‚Äôs community is inclusive. Students in this class represent a rich variety of backgrounds and perspectives. The Human-Environment Systems group is committed to providing an atmosphere for learning that respects diversity and creates inclusive environments in our courses. While working together to build this community, we ask all members to: * share their unique experiences, values, and beliefs, if comfortable doing so.\n listen deeply to one another.\n honor the uniqueness of their peers.\n appreciate the opportunity we have to learn from each other in this community.\n use this opportunity together to discuss ways in which we can create an inclusive environment in this course and across the campus community.\n recognize opportunities to invite a community member to exhibit more inclusive, equitable speech or behavior‚Äîand then also invite them into further conversation. We also expect community members to respond with gratitude and to take a moment of reflection when they receive such an invitation, rather than react immediately from defensiveness.\n keep confidential any discussions that the community has of a personal (or professional) nature, unless the speaker has given explicit permission to share what they have said.\n respect the right of students to be addressed and referred to by the names and pronouns that correspond to their gender identities, including the use of non-binary pronouns.\n   We use each other‚Äôs preferred names and pronouns. I will ask you to let me know your preferred or adopted name and gender pronoun(s), and I will make those changes to my own records and address you that way in all cases.\nTo change to a preferred name so that it displays on all BSU sites, including Canvas and our course roster, contact the Registrar‚Äôs Office at (208) 426-4249. Note that only a legal name change can alter your name on BSU official and legal documents (e.g., your transcript).\n This course is accessible to students with disabilities. I recognize that navigating your education and life can often be more difficult if you have disabilities. I want you to achieve at your highest capacity in this class. If you have a disability, I need to know if you encounter inequitable opportunities in my course related to:\n accessing and understanding course materials engaging with course materials and other students in the course\n demonstrating your skills and knowledge on assignments and exams.\n  If you have a documented disability, you may be eligible for accommodations in all of your courses. To learn more, make an appointment with the university‚Äôs Educational Access Center.\n For students responsible for children I recognize the unique challenges that can arise for students who are also parents or guardians of children. Any student needing to temporarily bring children or another dependent to class is welcome to do so to stay engaged with the class.\n  Academic Integrity Academic integrity is the principle that asks students to engage with their academic work to the fullest and to behave honestly, transparently, and ethically in every assignment and every interaction with a peer, professor, or research participant. When a strong culture of academic integrity is fostered by students and faculty in an academic program, students learn more, build positive relationships and collaborations, and can feel more confident in the value of their degrees.\nIn order to cultivate fairness and credibility, everyone must participate in upholding academic integrity. Students in this class are responsible for asking for help or clarification when it‚Äôs needed, speaking up when they see unethical behavior taking place, and understanding and adhering to the Student Code of Conduct, including the section on academic misconduct. Boise State and I take academic misconduct very seriously. It‚Äôs important to know that when a student engages in academic misconduct, I will report the incident to the Office of the Dean of Students. I also have the right to assign sanctions, which could include requirements to revise or redo work, complete educational assignments to learn about academic integrity, and grade penalties ranging from lower credit on an assignment to failing this class1. Students should learn more by reviewing the Student Code of Conduct.\n  So seriously, just don‚Äôt cheat or plagiarize!‚Ü©Ô∏é\n   ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"e4d5a4a79239f08c6ad0d7cbf1be756c","permalink":"http://isdrfall21.classes.spaseslab.com/syllabus/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/syllabus/","section":"","summary":"Course Description Course Objectives Expectations Prerequisite Knowledge and Skills  Getting help with R problems  Course materials  R and RStudio  Course schedule Student Well-being Assignments and grades  Learning during a pandemic Late work  This course was designed with you in mind  This class‚Äôs community is inclusive.","tags":null,"title":"Syllabus","type":"page"}]